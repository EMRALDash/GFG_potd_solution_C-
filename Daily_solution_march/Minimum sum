class Solution {
  public:
    string addStrings(string a, string b) {
        string res = "";
        int i = a.size() - 1, j = b.size() - 1, carry = 0;
        while (i >= 0 || j >= 0 || carry) {
            int sum = carry;
            if (i >= 0) sum += a[i--] - '0';
            if (j >= 0) sum += b[j--] - '0';
            res += (sum % 10) + '0';
            carry = sum / 10;
        }
        reverse(res.begin(), res.end());
        // Remove leading zeros
        int pos = res.find_first_not_of('0');
        return pos == string::npos ? "0" : res.substr(pos);
    }

    string minSum(vector<int> &arr) {
        sort(arr.begin(), arr.end());
        string a = "", b = "";
        for (int i = 0; i < arr.size(); ++i) {
            if (i % 2 == 0) a += arr[i] + '0';
            else b += arr[i] + '0';
        }
        return addStrings(a, b);
    }
};
