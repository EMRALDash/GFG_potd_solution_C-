class Solution {
  public:
    int nonLisMaxSum(vector<int>& arr) {
        int n = arr.size();
        vector<int> dp(n, 1); // LIS length at each index
        int maxLen = 1;

        for (int i = 0; i < n; ++i) {
            for (int j = 0; j < i; ++j) {
                if (arr[i] > arr[j] && dp[i] < dp[j] + 1)
                    dp[i] = dp[j] + 1;
            }
            maxLen = max(maxLen, dp[i]);
        }

        // Now collect elements of one LIS of length = maxLen
        vector<int> lis;
        int len = maxLen;
        for (int i = n - 1; i >= 0; --i) {
            if (dp[i] == len) {
                lis.push_back(arr[i]);
                len--;
            }
            if (len == 0) break;
        }

        int totalSum = 0, lisSum = 0;
        for (int x : arr) totalSum += x;
        for (int x : lis) lisSum += x;

        return totalSum - lisSum;
    }
};
