#include <deque>
#include <algorithm> // For std::rotate

class Solution {
  public:
    void rotateDeque(std::deque<int>& dq, int type, int k) {
        int n = dq.size();
        if (n == 0) return;

        k = k % n; // Only need to rotate at most n times
        if (k == 0) return; // No rotation needed

        if (type == 1) {
            // Right Rotation
            std::rotate(dq.begin(), dq.end() - k, dq.end());
        } else if (type == 2) {
            // Left Rotation
            std::rotate(dq.begin(), dq.begin() + k, dq.end());
        }
    }
};
