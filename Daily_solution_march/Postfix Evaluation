#include <vector>
#include <stack>
#include <string>
#include <cmath>

using namespace std;

class Solution {
  public:
    int evaluatePostfix(vector<string>& arr) {
        stack<int> st;

        for (string& token : arr) {
            if (token == "+" || token == "-" || token == "*" || token == "/" || token == "^") {
                int b = st.top(); st.pop();
                int a = st.top(); st.pop();
                int result = 0;

                if (token == "+") result = a + b;
                else if (token == "-") result = a - b;
                else if (token == "*") result = a * b;
                else if (token == "/") {
                    // floor division
                    result = a / b;
                    if ((a ^ b) < 0 && a % b != 0) result--; // adjust for floor division
                }
                else if (token == "^") result = pow(a, b);

                st.push(result);
            } else {
                st.push(stoi(token)); // convert string to int and push
            }
        }

        return st.top();
    }
};
