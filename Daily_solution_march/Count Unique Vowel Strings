#include <bits/stdc++.h>
using namespace std;

class Solution {
public:
    int vowelCount(string& s) {
        unordered_map<char, int> vowelFreq;
        unordered_set<char> vowels = {'a', 'e', 'i', 'o', 'u'};

        // Count frequency of each vowel
        for (char c : s) {
            if (vowels.count(c)) {
                vowelFreq[c]++;
            }
        }

        // If no vowels or only one vowel â†’ only 1 way
        if (vowelFreq.empty()) return 0;

        int k = vowelFreq.size(); // Number of unique vowels
        long long result = 1;

        // Multiply the counts (combinations)
        for (auto& pair : vowelFreq) {
            result *= pair.second;
        }

        // Multiply by factorial of number of vowels (permutations)
        result *= factorial(k);

        return result;
    }

private:
    long long factorial(int n) {
        long long res = 1;
        for (int i = 2; i <= n; ++i)
            res *= i;
        return res;
    }
};
