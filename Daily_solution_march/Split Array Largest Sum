class Solution {
public:
    bool isValid(vector<int>& nums, int k, int maxSum) {
        int cnt = 1, currSum = 0;
        for (int num : nums) {
            if (currSum + num > maxSum) {
                cnt++;
                currSum = num;
            } else {
                currSum += num;
            }
        }
        return cnt <= k;
    }

    int splitArray(vector<int>& nums, int k) {
        int low = *max_element(nums.begin(), nums.end());
        int high = accumulate(nums.begin(), nums.end(), 0);
        int res = high;

        while (low <= high) {
            int mid = low + (high - low) / 2;
            if (isValid(nums, k, mid)) {
                res = mid;
                high = mid - 1;
            } else {
                low = mid + 1;
            }
        }
        return res;
    }
};
