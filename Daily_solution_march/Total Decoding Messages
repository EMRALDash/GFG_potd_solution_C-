class Solution {
  public:
    int countWays(string &digits) {
        int n = digits.size();
        if (n == 0 || digits[0] == '0') return 0;

        int prev2 = 1, prev1 = 1; // dp[-1] = 1, dp[0] = 1

        for (int i = 1; i < n; i++) {
            int curr = 0;

            // Single-digit decode
            if (digits[i] != '0')
                curr += prev1;

            // Two-digit decode
            int twoDigit = stoi(digits.substr(i - 1, 2));
            if (twoDigit >= 10 && twoDigit <= 26)
                curr += prev2;

            prev2 = prev1;
            prev1 = curr;
        }

        return prev1;
    }
};
