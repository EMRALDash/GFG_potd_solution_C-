class Solution {
  public:
    int maxCircularSum(vector<int> &arr) {
        int total_sum = 0;
        int max_kadane = INT_MIN, current_max = 0;
        int min_kadane = INT_MAX, current_min = 0;

        for (int i = 0; i < arr.size(); i++) {
            total_sum += arr[i];

            // Max subarray (Kadane)
            current_max = max(arr[i], current_max + arr[i]);
            max_kadane = max(max_kadane, current_max);

            // Min subarray
            current_min = min(arr[i], current_min + arr[i]);
            min_kadane = min(min_kadane, current_min);
        }

        if (max_kadane < 0) // all elements are negative
            return max_kadane;

        return max(max_kadane, total_sum - min_kadane);
    }
};
