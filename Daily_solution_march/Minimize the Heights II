class Solution {
  public:
    int getMinDiff(vector<int> &arr, int k) {
        int n = arr.size();
        if (n == 1)
            return 0;

        // Step 1: Sort the array
        sort(arr.begin(), arr.end());

        // Step 2: Initialize answer as the initial max-min without any changes
        int ans = arr[n - 1] - arr[0];

        // Step 3: Consider modifying heights with +k and -k
        int smallest = arr[0] + k;
        int largest = arr[n - 1] - k;

        for (int i = 0; i < n - 1; i++) {
            int min_height = min(smallest, arr[i + 1] - k);
            int max_height = max(largest, arr[i] + k);

            // Skip if min_height becomes negative
            if (min_height < 0) continue;

            ans = min(ans, max_height - min_height);
        }

        return ans;
    }
};
