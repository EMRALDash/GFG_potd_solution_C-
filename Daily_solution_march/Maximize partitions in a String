class Solution {
public:
    int maxPartitions(string &s) {
        unordered_map<char, int> lastIndex;
        int n = s.size();
        
        // Step 1: Store the last occurrence of each character
        for (int i = 0; i < n; i++) {
            lastIndex[s[i]] = i;
        }

        // Step 2: Iterate and partition greedily
        int partitions = 0, end = 0;
        for (int i = 0; i < n; i++) {
            end = max(end, lastIndex[s[i]]); // Extend partition boundary
            if (i == end) {  // If we reached the last occurrence of all chars in partition
                partitions++; // Finalize partition
            }
        }

        return partitions;
    }
};
