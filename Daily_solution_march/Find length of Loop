class Solution {
  public:
    // Function to find the length of a loop in the linked list.
    int countNodesinLoop(Node *head) {
        Node *slow = head;
        Node *fast = head;
        
        // Step 1: Detect loop using Floyd's algorithm
        while (slow && fast && fast->next) {
            slow = slow->next;
            fast = fast->next->next;
            
            // Loop detected
            if (slow == fast) {
                // Step 2: Count nodes in the loop
                int count = 1;
                Node* temp = slow->next;
                while (temp != slow) {
                    count++;
                    temp = temp->next;
                }
                return count;
            }
        }
        
        // No loop found
        return 0;
    }
};
